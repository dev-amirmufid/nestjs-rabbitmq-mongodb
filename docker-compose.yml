version: '3'

volumes:
  mongo-data-store:
  redis-data-store:
  app-node_modules:

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo-data-store:/data/db
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo ${MONGO_DB_USERNAME}:${MONGO_DB_PASSWORD}@${MONGO_DB_HOST}:${MONGO_DB_PORT}/${MONGO_DB_NAME} --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    container_name: redis
    image: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - redis-data-store:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']

  auth:
    container_name: auth-services
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./:/home/node/app
      - app-node_modules:/home/node/app/node_modules
    command: npm run start:dev auth

  users:
    container_name: users-services
    build:
      context: ./
      dockerfile: ./apps/users/Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./:/home/node/app
      - app-node_modules:/home/node/app/node_modules
    command: npm run start:dev users

  api:
    container_name: api-gateway
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    volumes:
      - ./:/home/node/app
      - app-node_modules:/home/node/app/node_modules
    command: npm run start:dev api
    depends_on:
      auth:
      users:
    env_file:
      - .env
    ports:
      - '1000:1000'
